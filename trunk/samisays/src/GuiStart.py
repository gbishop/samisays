''' Imports '''
import wx
import sys
from Constants import *


class GuiStart(wx.Frame):
    '''
    A subclass of the wx Frame class. It is diplayed when the program is loaded 
    as a welcome frame and a gateway to the rest of Sami Says.
    '''
    

    def __init__(self, *args, **kwds):
        '''
        Constructor for initializing frame elements and binding window events.
        '''
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel = wx.Panel(self)
        
        self.img = wx.Image("art/banner_1100x400.png", wx.BITMAP_TYPE_PNG)
        self.picBanner = wx.StaticBitmap(self.panel, -1, wx.NullBitmap)
        self.btnStories = wx.Button(self.panel, -1, "The Bookshelf")
        self.btnStories.SetFont(wx.Font(32,wx.DECORATIVE, wx.NORMAL, wx.NORMAL, 0, "Comic Sans MS"))
        self.btnTemplates = wx.Button(self.panel, -1, "Teacher Templates")
        self.btnTemplates.SetFont(wx.Font(32,wx.DECORATIVE, wx.NORMAL, wx.NORMAL, 0, "Comic Sans MS"))
        self.btnPrioritize = wx.Button(self.panel, -1, "Prioritize Sounds")
        self.btnPrioritize.SetFont(wx.Font(32,wx.DECORATIVE, wx.NORMAL, wx.NORMAL, 0, "Comic Sans MS"))
        self.__set_properties()
        self.__do_layout()

        # Catch keys on all objects
        objects = [self.panel, self.picBanner, self.btnStories, self.btnTemplates]
        for obj in objects:
            obj.Bind(wx.EVT_KEY_UP, self.onKeyUp)
            obj.Bind(wx.EVT_KEY_DOWN, self.onKeyDown)

        self.Bind(wx.EVT_BUTTON, self.btnStoriesPressed, self.btnStories)
        self.Bind(wx.EVT_BUTTON, self.btnTemplatesPressed, self.btnTemplates)
        self.Bind(wx.EVT_BUTTON, self.btnPrioritizePressed, self.btnPrioritize)
        self.Bind(wx.EVT_SIZING, self.onSize)
        self.Bind(wx.EVT_CLOSE, self.onClose)
        self.firstDown = -1
        self.env = {}
        

    def __set_properties(self):
        '''
        Helper function for the constructor (generated by wxGlade)
        '''
        self.SetTitle("Sami Says")
        self.SetPosition((0,0))
        self.SetSize(wx.DisplaySize())
        self.btnStories.SetMinSize((175, 35))
        self.btnStories.SetToolTipString("Make a story by recording and inserting sounds.")
        self.btnStories.SetDefault()
        self.btnStories.SetFocus()
        self.btnTemplates.SetMinSize((175, 35))
        self.btnTemplates.SetToolTipString("Make story templates for students to fill in.")
        self.btnPrioritize.SetToolTipString("Manage the sound library.")
    # end guiStart.__set_properties


    def __do_layout(self):
        '''
        Helper function for the constructor (generated by wxGlade)
        '''
        # begin wxGlade: guiStart.__do_layout
        szrPrnt = wx.BoxSizer(wx.VERTICAL)
        szrChildH = wx.BoxSizer(wx.HORIZONTAL)
        szrChildV = wx.BoxSizer(wx.VERTICAL)
        szrChildV.Add((10, 10), 2, 0, 0)
        szrChildV.Add(self.btnStories, 2, wx.EXPAND, 0)
        szrChildV.Add((10, 10), 1, 0, 0)
        szrChildV.Add(self.btnTemplates, 2, wx.EXPAND, 0)
        szrChildV.Add((10, 10), 1, 0, 0)
        szrChildV.Add(self.btnPrioritize, 2, wx.EXPAND, 0)
        szrChildV.Add((10, 10), 2, 0, 0)
        szrChildH.Add((10, 10), 1, 0, 0)
        szrChildH.Add(szrChildV, 3, wx.EXPAND, 0)
        szrChildH.Add((10, 10), 1, 0, 0)
        szrPrnt.Add(self.picBanner, 1, wx.EXPAND, 0)
        szrPrnt.Add(szrChildH, 2, wx.EXPAND, 0)
        self.panel.SetSizer(szrPrnt)
        self.panel.Layout()
        self.panel.SetAutoLayout(True)
        (w,h) = self.picBanner.GetSizeTuple()
        self.img.Rescale(w,h)
        self.picBanner.SetBitmap(wx.BitmapFromImage(self.img))
        

    def btnStoriesPressed(self, event): # wxGlade: guiStart.<event_handler>
        '''
        Function for moving to the guiStudents frame. Bound to the Bookshelf 
        Button.
        '''
        self.Hide()
        self.env['guiStudents'].Show()
        

    def btnTemplatesPressed(self, event):
        '''
        Function for moving to the guiStories frame in teacher mode. Bound to 
        the Teacher Templates button.
        '''
        TEACHER_INDEX = -2
        self.Hide()
        self.env['guiStories'].setStudent(TEACHER_INDEX)
        self.env['guiStories'].Show()
        
    def btnPrioritizePressed(self,event):
        self.Hide()
        self.env['guiPrioritize'].Show()
    

    def onClose(self, event):
        '''
        Function for handing the close event.
        '''
        dialog = wx.MessageDialog(None,'Are you sure you want to leave?','Sami Says',wx.YES_NO | wx.ICON_EXCLAMATION)
        if dialog.ShowModal() == wx.ID_YES:
            dialog.Destroy()
            sys.exit()
        else:
            dialog.Destroy()
    

    def onSize(self, event):
        '''
        Function for handling the resizing fo the banner image when frame is 
        resized.
        '''
        self.img = wx.Image("art/banner_1100x400.png", wx.BITMAP_TYPE_PNG)
        (w,h) = self.picBanner.GetSizeTuple()
        self.img.Rescale(w,h)
        self.picBanner.SetBitmap(wx.BitmapFromImage(self.img))
        self.Refresh()
    

    def setEnv(self,env): 
        '''
        Function fo setting the application environment in Sami Says.
        '''
        self.env = env
    

    def onKeyDown(self, event):
        '''
        Functon for handling keyboard down events.
        '''
        if self.firstDown == -1:
            self.firstDown = event.GetKeyCode()
    

    def onKeyUp(self, event):
        '''
        Function for handing keyboard up events. This binds the onClose function 
        to the escape key.
        '''
        keyCode = event.GetKeyCode()
        if keyCode != self.firstDown:
            event.Skip()
        
        if keyCode == wx.WXK_ESCAPE:
            self.onClose(False)
        
        self.firstDown = -1

''' Handling an attempt at standalone running '''
if __name__ == "__main__":
    print 'The class "GuiStart" is not runnable.'
        
